plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

repositories {
    mavenCentral()
    google()
}

version = '1.0'
sourceCompatibility = 21
targetCompatibility = 21

javafx {
    version >= '21'
    modules = [ 'javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation project(':')
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.23.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.23.1'
    //testImplementation group: 'junit', name: 'junit', version:'5.10.0'
    // for adding specific dependencise as per need in Junit 5
    //testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    //testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    // If you need to run JUnit 4 tests
    // testImplementation 'org.junit.vintage:junit-vintage-engine:5.10.0'
}

mainClassName = 'ee.ut.math.tvt.salessystem.ui.SalesSystemUI'

jar {
	doFirst {
        manifest {
            if (!configurations.runtimeClasspath.isEmpty()) {
                attributes('Class-Path':
                                configurations.runtimeClasspath.collect{it.toURI().toString()}.join(' '))
            }
        }
    }

    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version,
                   'Main-Class': mainClassName
    }


}
task copyResources(type: Copy) {
    def sourceFile = "${rootProject.projectDir}/src/main/resources/stockItemListFile.txt"
    def destDir = "${projectDir}/src/main/resources"
    from(sourceFile) // Source file path
    into(destDir)    // Destination path in the submodule
}

// This will be executed after the application runs
task copyResources2(type: Copy) {
    def sourceFile = "${projectDir}/src/main/resources/stockItemListFile.txt"
    def destDir = "${rootProject.projectDir}/src/main/resources"
    from(sourceFile) // Source file path
    into(destDir)    // Destination path in the root module
}
task cleanUp(type: Delete) {
    delete "${projectDir}/src/main/resources/stockItemListFile.txt"
}

processResources.dependsOn(copyResources)

run.finalizedBy(copyResources2)
run.finalizedBy(cleanUp)
